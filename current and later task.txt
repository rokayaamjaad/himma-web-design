<!doctype html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport"
          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
              <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <link href="https://unpkg.com/tailwindcss@^2/dist/tailwind.min.css" rel="stylesheet">

    <title>vue task</title>
</head>
<body class="bg-gray-300">
<div id="app">
<div class="flex justify-center mt-10 mb-20">
<input id="root1" v-on:keyup.enter="tasksinformation()" v-model="Tasknumber" class=" px-40 rounded rounded-md outline-none border-2 focus:border-purple-300" placeholder="what are your tasks ">
</div>
<div class="mb-10">
<div v-for="(Tasknumber,index) in tasks">
<div class="flex-col justify-between items-center rounded rounded-md ml-16 ">
<h1>current tasks</h1>
<div class="flex justify-between bg-white rounded rounded-md"><p class="pt-2">{{Tasknumber}}</p>
<div>
<button @click="latertasksinformation(Tasknumber,index)" class="w-16 h-10 text-white bg-blue-400 rounded rounded-md border-2 focus:border-gray-600">later</button>
<button @click="removetask(Tasknumber)" class="w-16 h-10 text-white bg-red-500 rounded rounded-md border-2 focus:border-black">remove</button>
</div></div>
</div>
</div></div>
<div v-for="later in latertasks" >
<div class="flex-col justify-between rounded rounded-md ml-16  ">
<h1>Later tasks</h1>
<div class="flex justify-between bg-white rounded rounded-md"><p class="pt-2">{{later}}</p>
<div>
<button @click="currenttask(later)" class="w-16 h-10 text-white bg-green-400 rounded rounded-md border-2 focus:border-gray-600">current</button>
<button @click="removelatertask(later)" class="w-16 h-10 text-white bg-red-500 rounded rounded-md border-2 focus:border-black">remove</button>
</div>
</div>
</div>
</div>
</div>
<script src="https://cdn.jsdelivr.net/npm/vue@2/dist/vue.js"></script>

<script>

let app= new Vue({
el:"#app",
data:{
Tasknumber:'',

tasks:[],

latertasks:[]


},

methods:{
tasksinformation() {
this.tasks.push(this.Tasknumber)
this.Tasknumber=''
},
removetask(x) {
 this.tasks.splice(this.tasks.indexOf(x) , 1);//the 1 mean we remove one item

    },

latertasksinformation(parameter,index) {
this.latertasks.push(parameter)
this.tasks.splice(index,1)

},
removelatertask(later) {
this.latertasks.splice(this.latertasks.indexOf(later),1)//the 1 mean we remove one item

},

currenttask(parameter,index){
this.tasks.push(parameter)
this.latertasks.splice(index,1)

            }

}
})


</script>


</body>
